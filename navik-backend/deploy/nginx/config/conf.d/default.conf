server {
    listen 80;
    server_name localhost;

    # Root welcome page
    location / {
        return 200 'Welcome to Navik Backend API Gateway\n';
        add_header Content-Type text/plain;
    }

    # Kafka UI
    location /kafka-ui {
        proxy_pass http://kafka-ui:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Location Service API
    location /api/location {
        proxy_pass http://location-producer:6969/api/location;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /dynamodb {
        proxy_pass http://dynamodb-admin:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # You can add more locations for future microservices
    # location /api/other-service/ {
    #     proxy_pass http://other-service:port/api/;
    #     proxy_set_header Host $host;
    #     ...
    # }

    # Health check endpoint
    location /health {
        return 200 '{"status":"healthy","services":{"kafka":"up","location-service":"up"}}\n';
        add_header Content-Type application/json;
    }
}